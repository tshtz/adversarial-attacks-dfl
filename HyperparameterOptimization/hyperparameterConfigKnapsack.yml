# This config can be used to run different HPO via SMAC
# Note that the order of parameters is
# configspace > this file 

- params:
    name: Knapsack
    model: baseline_mse
    architecture_name: advanced
    capacity: 120 # capacity of knapsack
    scheduler: False # scheduler (boolean)
    max_epochs: 35 # maximum number of epochs
    min_epochs: 5 # minimum number of epochs
    num_workers: 0 # maximum number of workers
    batch_size: 128 # batch size
    normalization: "zscore" # norm
  smac:
    walltime_limit: 86400
    n_trials: 200
    config_space_name: baseline_mse_configspace
    seed: 0

- params:
    name: Knapsack
    capacity: 120 # capacity of knapsack
    model: SPO # name of the model
    architecture_name: advanced
    scheduler: False # scheduler (boolean)
    max_epochs: 35 # maximum number of epochs
    min_epochs: 5 # minimum number of epochs
    num_workers: 0 # maximum number of workers
    batch_size: 128 # batch size
    normalization: "zscore" # norm
  smac:
    walltime_limit: 86400
    n_trials: 200
    config_space_name: spo_configspace
    seed: 0

- params:
    name: Knapsack
    capacity: 120 # capacity of knapsack
    model: DBB # name of the model
    architecture_name: advanced
    scheduler: False # scheduler (boolean)
    max_epochs: 35 # maximum number of epochs
    min_epochs: 5 # minimum number of epochs
    num_workers: 0 # maximum number of workers
    batch_size: 128 # batch size
    normalization: "zscore" # norm
  smac:
    walltime_limit: 86400
    n_trials: 200
    config_space_name: dbb_configspace
    seed: 0

- params:
    name: Knapsack
    capacity: 120 # capacity of knapsack
    model: FenchelYoung # name of the model
    architecture_name: advanced
    scheduler: False # scheduler (boolean)
    max_epochs: 35 # maximum number of epochs
    min_epochs: 5 # minimum number of epochs
    num_workers: 0 # maximum number of workers
    batch_size: 128 # batch size
    normalization: "zscore" # norm
    num_samples: 1
  smac:
    walltime_limit: 86400
    n_trials: 200
    config_space_name: fenchel_young_configspace
    seed: 0

- params:
    name: Knapsack
    capacity: 120 # capacity of knapsack
    model: CachingPO # name of the model
    loss: listwise # loss
    architecture_name: advanced
    scheduler: False # scheduler (boolean)
    max_epochs: 35 # maximum number of epochs
    min_epochs: 5 # minimum number of epochs
    num_workers: 0 # maximum number of workers
    batch_size: 128 # batch size
    normalization: "zscore" # norm
    num_samples: 1
    growth: 0.05 # growth parameter of rankwise losses
  smac:
    walltime_limit: 86400
    n_trials: 200
    config_space_name: caching_listwise_configspace
    seed: 0

- params:
    name: Knapsack
    capacity: 120 # capacity of knapsack
    model: CachingPO # name of the model
    loss: pairwise # loss
    architecture_name: advanced
    scheduler: False # scheduler (boolean)
    max_epochs: 35 # maximum number of epochs
    min_epochs: 5 # minimum number of epochs
    num_workers: 0 # maximum number of workers
    batch_size: 128 # batch size
    normalization: "zscore" # norm
    num_samples: 1
    growth: 0.05 # growth parameter of rankwise losses
  smac:
    walltime_limit: 86400
    n_trials: 200
    config_space_name: caching_pairwise_configspace
    seed: 0

- params:
    name: Knapsack
    capacity: 120 # capacity of knapsack
    model: CachingPO # name of the model
    loss: pairwise_diff # loss
    architecture_name: advanced
    scheduler: False # scheduler (boolean)
    max_epochs: 35 # maximum number of epochs
    min_epochs: 5 # minimum number of epochs
    num_workers: 0 # maximum number of workers
    batch_size: 128 # batch size
    normalization: "zscore" # norm
    num_samples: 1
    growth: 0.05 # growth parameter of rankwise losses
  smac:
    walltime_limit: 86400
    n_trials: 200
    config_space_name: caching_pairwise_diff_configspace
    seed: 0

- params:
    name: Knapsack
    capacity: 120 # capacity of knapsack
    model: CachingPO # name of the model
    loss: MAP_c # loss
    architecture_name: advanced
    scheduler: False # scheduler (boolean)
    max_epochs: 35 # maximum number of epochs
    min_epochs: 5 # minimum number of epochs
    num_workers: 0 # maximum number of workers
    batch_size: 128 # batch size
    normalization: "zscore" # norm
    num_samples: 1
    growth: 0.05 # growth parameter of rankwise losses
  smac:
    walltime_limit: 86400
    n_trials: 200
    config_space_name: caching_mapc_configspace
    seed: 0

- params:
    name: Knapsack
    capacity: 120 # capacity of knapsack
    model: IMLE # name of the model
    architecture_name: advanced
    scheduler: False # scheduler (boolean)
    max_epochs: 35 # maximum number of epochs
    min_epochs: 5 # minimum number of epochs
    num_workers: 0 # maximum number of workers
    batch_size: 128 # batch size
    normalization: "zscore" # norm
    num_samples: 1
  smac:
    walltime_limit: 86400
    n_trials: 200
    config_space_name: imle_configspace
    seed: 0

- params:
    name: Knapsack
    capacity: 120 # capacity of knapsack
    model: IntOpt # name of the model
    architecture_name: advanced
    scheduler: False # scheduler (boolean)
    max_epochs: 35 # maximum number of epochs
    min_epochs: 5 # minimum number of epochs
    num_workers: 0 # maximum number of workers
    batch_size: 128 # batch size
    normalization: "zscore" # norm
    num_samples: 1
  smac:
    walltime_limit: 86400
    n_trials: 200
    config_space_name: intopt_configspace
    seed: 0

- params:
    name: Knapsack
    capacity: 120 # capacity of knapsack
    model: DCOL # name of the model
    architecture_name: advanced
    scheduler: False # scheduler (boolean)
    max_epochs: 35 # maximum number of epochs
    min_epochs: 5 # minimum number of epochs
    num_workers: 0 # maximum number of workers
    batch_size: 128 # batch size
    normalization: "zscore" # norm
    num_samples: 1
  smac:
    walltime_limit: 86400
    n_trials: 200
    config_space_name: dcol_configspace
    seed: 0